@startuml


abstract Automaton{
- String name;
- HashSet<String> Q;
- InputAlphabet Sigma;
- HashSet<Transaction> delta;
- String q0;
- HashSet<String> F;

+ Automaton(StateSet Q);
+ {abstract} boolean isAccept(String inputString);
+ String convert2Tape();
+ String toString();

}

Transaction --o Automaton

class Transaction<S, D> {
- HashSet< S, D > transaction;
+ D getNextState(Character c, S);
+ void setNextState(Character c, D);
}


Automaton <|-- DFA
class DFA{
- HashMap<String, Character, Sring> delata;
+ boolean isAccept(String inputString);
}

Automaton <|-- NFA
class NFA{
- HashMap<State, Character, StateSet> delata;
+ DFA convert2DFA();
+ boolean isAccept(String inputString);
}

Automaton <|-- PDA
class PDA{
+ HashSet<String> Gamma;
+ boolean isAccept(String inputString);
}

Automaton <-- TuringMaschine

Transaction --o TuringMaschine

class TuringMaschine{
- String name;
- HashSet<String> Q;
- HashSet<String> Sigma;
- HashSet<String> Gamma;
- HashMap<HashMap<Q, Gamma>, HashMap<Q, Gamma, {L, R}>> delta;
- String q0;
- Sttring qAccept;
- String qReject;

+ TuringMaschine(StateSet Q, Alphabet Sigma, Tape Gamma, HashMap delta, State q0, State qAccept, State qReject);
+ void reset();
+ void loadProgram(String program);
+ boolean isAccept(String inputTape);
}

@enduml