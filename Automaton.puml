@startuml

InputAlphabet --o Automaton

abstract Automaton{
- String name
- HashSet<String> Q;
- InputAlphabet Sigma;
-
- String q0;
- HashSet<String> F;

+ Automaton(StateSet Q);
+ {abstract} boolean isAccept(String inputString);
+ String toString();

}

Trunsaction -- Automaton

class Trunsaction {
- String name
- String currentState
- Character c
- String nextString
}

class InputAlphabet{
+ HashSet<Character> alphabet;
}

Automaton <|-- DFA
class DFA{
- HashMap<String, Character, Sring> delata;
+ boolean isAccept(String inputString);
}

Automaton <|-- NFA
class NFA{
- HashMap<State, Character, StateSet> delata;
+ boolean isAccept(String inputString);
}

Automaton <|-- PDA
class PDA{
+ boolean isAccept(String inputString);
}

InputAlphabet --o TuringMaschine
TapeAlphabet --o TuringMaschine

class TuringMaschine{
- name;
- StateSet Q;
- InputAlphabet Sigma;
- TapeAlphabet Gamma;
- HashMap<HashMap<Q, Gamma>, HashMap<Q, Gamma, {L, R}>> delta;
- State q0;
- State qAccept;
- State qReject;

+ TuringMaschine(StateSet Q, Alphabet Sigma, Tape Gamma, HashMap delta, State q0, State qAccept, State qReject);
+ boolean isAccept(Tape inputTape);
}

@enduml